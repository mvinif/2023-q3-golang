services:
  api1: &api1
    hostname: "api1"
    build: .
    expose: 
      - "80"
    environment:
      DATABASE_URL: "postgres://postgres:postgres@db:5432/apidb"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: '0.4GB'

  api2: 
    <<: *api1

  nginx:
    hostname: "nginx"
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:80"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5GB'

  db:
    hostname: "db"
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: apidb
    ports:
      - "5432:5432"
    volumes:
      # - api-db:/var/lib/postgresql/data
      - ./migrations/seed.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d apidb -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '1.25'
          memory: '1.7GB'

